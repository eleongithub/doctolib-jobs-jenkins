---
# tasks file for springboot

- name: Stop eventual Spring Boot process running
  service:
    name: springboot
    state: stopped
    enabled: no
  ignore_errors: true

- name: Create Group for Spring Boot
  group:
    name: "{{ springboot_group }}"
    state: present

- name: Create User for Spring Boot
  user:
    name: "{{ springboot_user }}"
    createhome: no
    group: "{{ springboot_group }}"
    shell: /bin/bash
    state: present

- name: Create Spring Boot directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ springboot_user }}"
    group: "{{ springboot_group }}"
    recurse: yes
  with_items:
    - "{{ springboot_main_directory }}"
    - "{{ springboot_jar_directory }}"
    - "{{ springboot_conf_directory }}"
    - "{{ springboot_logs_directory }}"

- name: Copy Spring Boot application configuration directory
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ springboot_user }}"
    group: "{{ springboot_group }}"
    mode: "0750"
  with_items: "{{ springboot_apps_conf_files }}"

- name: Download Spring Boot application jar
  get_url:
    url: "{{ springboot_nexus_url }}?r={{ springboot_apps_repository }}&g={{ springboot_apps_groupid }}&a={{ springboot_apps_artifactid }}&v={{ springboot_apps_version }}&p={{ springboot_apps_package }}"
    dest: "{{ springboot_main_directory }}/{{ springboot_apps_jar_name }}"
    owner: "{{ springboot_user }}"
    group: "{{ springboot_group }}"
    mode: 0755

- name: Copy Spring Boot script shell
  template:
    src: springboot.sh.j2
    dest: /etc/init.d/springboot
    owner: root
    group: root
    mod: 0755

- name: Add Iptables rule
  include: iptables.yml
  when: springboot_iptables_enabled

- name: Enable & start Spring Boot service
  service:
    name: springboot
    enabled: yes
    state: started
